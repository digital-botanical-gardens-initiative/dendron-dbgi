{"pageProps":{"note":{"id":"xfo9r506ukemq0r2191kqkl","title":"postgres","desc":"","updated":1687525984355,"created":1666246320224,"custom":{},"fname":"Master-Works.Maëlle-Wannier.tutorial.postgres","type":"note","vault":{"fsPath":"vault"},"contentHash":"8e8330f964fbb22ca2e4e0986f995555","links":[{"from":{"fname":"Master-Works.Maëlle-Wannier.tutorial.directus.Basics","id":"l5hk8footuy2893u4zi6yvs","vaultName":"vault"},"type":"backlink","position":{"start":{"line":29,"column":33,"offset":1706},"end":{"line":29,"column":105,"offset":1778},"indent":[]},"value":"Master-Works.Maëlle-Wannier.tutorial.postgres"},{"from":{"fname":"Master-Works.Maëlle-Wannier.tutorial.directus.Basics","id":"l5hk8footuy2893u4zi6yvs","vaultName":"vault"},"type":"backlink","position":{"start":{"line":30,"column":33,"offset":1811},"end":{"line":30,"column":112,"offset":1890},"indent":[]},"value":"Master-Works.Maëlle-Wannier.tutorial.postgres"}],"anchors":{"connect-to-postgresql":{"type":"header","text":"Connect to postgresql","value":"connect-to-postgresql","line":8,"column":0,"depth":1},"database":{"type":"header","text":"DATABASE","value":"database","line":13,"column":0,"depth":1},"create-new-database":{"type":"header","text":"Create new database","value":"create-new-database","line":15,"column":0,"depth":2},"list-all-database":{"type":"header","text":"list all database","value":"list-all-database","line":20,"column":0,"depth":2},"connect-to-the-database":{"type":"header","text":"Connect to the database","value":"connect-to-the-database","line":25,"column":0,"depth":2},"table":{"type":"header","text":"TABLE","value":"table","line":30,"column":0,"depth":1},"create-a-new-table":{"type":"header","text":"Create a new table","value":"create-a-new-table","line":32,"column":0,"depth":2},"generate-table-layout-to-create-new-table-before-importing-csv-in-the-db":{"type":"header","text":"Generate table layout to create new table before importing csv in the db:","value":"generate-table-layout-to-create-new-table-before-importing-csv-in-the-db","line":44,"column":0,"depth":3},"list-tables-in-a-db":{"type":"header","text":"List tables in a db","value":"list-tables-in-a-db","line":52,"column":0,"depth":3},"describe-each-table":{"type":"header","text":"Describe each table","value":"describe-each-table","line":57,"column":0,"depth":3},"add-a-column":{"type":"header","text":"Add a column","value":"add-a-column","line":62,"column":0,"depth":2},"drop-a-table":{"type":"header","text":"Drop a table","value":"drop-a-table","line":68,"column":0,"depth":2},"insert-data-in-table":{"type":"header","text":"Insert data in table","value":"insert-data-in-table","line":73,"column":0,"depth":2},"manually":{"type":"header","text":"Manually","value":"manually","line":76,"column":0,"depth":3},"from-a-csv-file":{"type":"header","text":"From a csv file","value":"from-a-csv-file","line":86,"column":0,"depth":3},"update-data-in-table":{"type":"header","text":"Update data in table","value":"update-data-in-table","line":94,"column":0,"depth":2},"delete-data-from-table":{"type":"header","text":"Delete data from table","value":"delete-data-from-table","line":103,"column":0,"depth":2},"constraints":{"type":"header","text":"Constraints","value":"constraints","line":109,"column":0,"depth":2},"when-defining-the-table":{"type":"header","text":"When defining the table","value":"when-defining-the-table","line":111,"column":0,"depth":3},"after-creation":{"type":"header","text":"After creation","value":"after-creation","line":125,"column":0,"depth":3},"some-useful-clauses":{"type":"header","text":"Some useful clauses","value":"some-useful-clauses","line":138,"column":0,"depth":2},"select-statement":{"type":"header","text":"Select statement","value":"select-statement","line":139,"column":0,"depth":3},"where-clause":{"type":"header","text":"Where clause","value":"where-clause","line":148,"column":0,"depth":3},"sequence":{"type":"header","text":"SEQUENCE","value":"sequence","line":159,"column":0,"depth":1},"restart-the-sequence-padding":{"type":"header","text":"Restart the sequence padding","value":"restart-the-sequence-padding","line":160,"column":0,"depth":2},"to-go-further":{"type":"header","text":"To go further","value":"to-go-further","line":166,"column":0,"depth":1}},"children":[],"parent":"gmay8ruvrqpqw2h8l8jc6uj","data":{}},"body":"<h1 id=\"postgres\">postgres<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#postgres\"></a></h1>\n<h1 id=\"connect-to-postgresql\">Connect to postgresql<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#connect-to-postgresql\"></a></h1>\n<pre class=\"language-bash\"><code class=\"language-bash\">psql -U username\n</code></pre>\n<h1 id=\"database\">DATABASE<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#database\"></a></h1>\n<h2 id=\"create-new-database\">Create new database<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#create-new-database\"></a></h2>\n<pre class=\"language-psql\"><code class=\"language-psql\">CREATE DATABASE dbname;\n</code></pre>\n<h2 id=\"list-all-database\">list all database<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#list-all-database\"></a></h2>\n<pre class=\"language-psql\"><code class=\"language-psql\">\\l\n</code></pre>\n<h2 id=\"connect-to-the-database\">Connect to the database<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#connect-to-the-database\"></a></h2>\n<pre class=\"language-psql\"><code class=\"language-psql\">\\c database_name\n</code></pre>\n<h1 id=\"table\">TABLE<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#table\"></a></h1>\n<h2 id=\"create-a-new-table\">Create a new table<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#create-a-new-table\"></a></h2>\n<pre class=\"language-psql\"><code class=\"language-psql\">CREATE TABLE table_name(             \n   column1 datatype,             \n   column2 datatype,        \n   column3 datatype,         \n   .....            \n   columnN datatype,         \n   PRIMARY KEY( one or more columns )          \n   );\n</code></pre>\n<h3 id=\"generate-table-layout-to-create-new-table-before-importing-csv-in-the-db\">Generate table layout to create new table before importing csv in the db:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#generate-table-layout-to-create-new-table-before-importing-csv-in-the-db\"></a></h3>\n<p>In bash terminal:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">head</span> -n <span class=\"token number\">20</span> table.csv <span class=\"token operator\">|</span> csvsql --no-constraints --tables table_name\n</code></pre>\n<p>This will give an sql command to crate the new table. The datatypes may have to be changed.</p>\n<h3 id=\"list-tables-in-a-db\">List tables in a db<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#list-tables-in-a-db\"></a></h3>\n<pre class=\"language-psql\"><code class=\"language-psql\">\\d\n</code></pre>\n<h3 id=\"describe-each-table\">Describe each table<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#describe-each-table\"></a></h3>\n<pre class=\"language-psql\"><code class=\"language-psql\">\\d table_name\n</code></pre>\n<h2 id=\"add-a-column\">Add a column<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#add-a-column\"></a></h2>\n<pre class=\"language-psql\"><code class=\"language-psql\">ALTER TABLE table_name\nADD COLUMN new_column_name data_type constraint;\n</code></pre>\n<h2 id=\"drop-a-table\">Drop a table<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#drop-a-table\"></a></h2>\n<pre class=\"language-psql\"><code class=\"language-psql\">DROP TABLE name;\n</code></pre>\n<h2 id=\"insert-data-in-table\">Insert data in table<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#insert-data-in-table\"></a></h2>\n<p>⚠️ The table should already exist</p>\n<h3 id=\"manually\">Manually<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#manually\"></a></h3>\n<pre class=\"language-psql\"><code class=\"language-psql\">INSERT INTO table_name (column1, column2, column3,...columnN)              \nVALUES (value1_row1, value2_row1, value3_row1,...valueN_row1),        \n         (value1_row2, value2_row2, value3_row2,...valueN_row2),          \n            ....;         \n</code></pre>\n<p>No need to specify the columns name if one is adding values for all the columns of the table. But the order of the values should be the same as the column.</p>\n<h3 id=\"from-a-csv-file\">From a csv file<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#from-a-csv-file\"></a></h3>\n<pre class=\"language-psql\"><code class=\"language-psql\">COPY table_name     \nFROM 'path/to/csv'       \nDELIMITER ';'       \nCSV HEADER\n</code></pre>\n<h2 id=\"update-data-in-table\">Update data in table<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#update-data-in-table\"></a></h2>\n<pre class=\"language-psql\"><code class=\"language-psql\">UPDATE table_name      \nSET column1 = value1,       \n   column2 = value2,       \n   ...        \nWHERE condition;\n</code></pre>\n<h2 id=\"delete-data-from-table\">Delete data from table<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#delete-data-from-table\"></a></h2>\n<pre class=\"language-psql\"><code class=\"language-psql\">DELETE FROM table_name        \nWHERE condition;\n</code></pre>\n<h2 id=\"constraints\">Constraints<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#constraints\"></a></h2>\n<h3 id=\"when-defining-the-table\">When defining the table<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#when-defining-the-table\"></a></h3>\n<pre class=\"language-psql\"><code class=\"language-psql\">CREATE TABLE TABLE (\n\tcolumn_1 data_type,\n\tcolumn_2 data_type,\n\t… \n   PRIMARY KEY (column_1, column_2),\n   CONSTRAINT constraint_name\n   FOREIGN KEY(fk_columns) \n\tREFERENCES parent_table(parent_key_columns)\n);\n</code></pre>\n<h3 id=\"after-creation\">After creation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#after-creation\"></a></h3>\n<pre class=\"language-psql\"><code class=\"language-psql\">ALTER TABLE products \nADD PRIMARY KEY (product_no);\n\nALTER TABLE child_table \nADD CONSTRAINT constraint_name \nFOREIGN KEY (fk_columns) \nREFERENCES parent_table (parent_key_columns);\n</code></pre>\n<h2 id=\"some-useful-clauses\">Some useful clauses<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#some-useful-clauses\"></a></h2>\n<h3 id=\"select-statement\">Select statement<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#select-statement\"></a></h3>\n<p>The SELECT statement returns all rows from one or more columns in a table.</p>\n<pre class=\"language-psql\"><code class=\"language-psql\">SELECT column_1, column_2, ..., column_n    (or * for all columns)     \nFROM table_name       \nother clauses;\n</code></pre>\n<h3 id=\"where-clause\">Where clause<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#where-clause\"></a></h3>\n<p>If one need to select data that satisfy a specified condition, one can use a WHERE clause as follow:       </p>\n<pre class=\"language-psql\"><code class=\"language-psql\">SELECT select_list     \nFROM table_name       \nWHERE condition        \n</code></pre>\n<p>The condition should be true, false or unknown. It can be a boolean expression or a combination of boolean expressions using the AND and OR operators.</p>\n<h1 id=\"sequence\">SEQUENCE<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sequence\"></a></h1>\n<h2 id=\"restart-the-sequence-padding\">Restart the sequence padding<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#restart-the-sequence-padding\"></a></h2>\n<p>If one do a mistake in the emi_external_id incremantation and needs to go back in the sequence:</p>\n<pre class=\"language-psql\"><code class=\"language-psql\">SELECT setval('samples_padding',1057); #If one want to restart the sequence at 1057\n</code></pre>\n<h1 id=\"to-go-further\">To go further<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#to-go-further\"></a></h1>\n<p><a href=\"https://www.postgresqltutorial.com/\">https://www.postgresqltutorial.com/</a></p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/dendron-dbgi/notes/l5hk8footuy2893u4zi6yvs\">Basics</a></li>\n</ul>","noteIndex":{"id":"txkHnVTI9AawnquiublXO","title":"The DBGI Dendron notes","desc":"","updated":1688889927268,"created":1645438795591,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"fbac06bb8ff15f08a14f40cc7c9e268e","links":[{"type":"wiki","from":{"fname":"root","id":"txkHnVTI9AawnquiublXO","vaultName":"vault"},"value":"open-notebook","position":{"start":{"line":28,"column":53,"offset":1976},"end":{"line":28,"column":70,"offset":1993},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"open-notebook"}},{"type":"wiki","from":{"fname":"root","id":"txkHnVTI9AawnquiublXO","vaultName":"vault"},"value":"welcome","position":{"start":{"line":34,"column":81,"offset":2595},"end":{"line":34,"column":92,"offset":2606},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"welcome"}},{"from":{"fname":"welcome","id":"tofizf0eb38rduuw6ffnzba","vaultName":"vault"},"type":"backlink","position":{"start":{"line":5,"column":27,"offset":59},"end":{"line":5,"column":35,"offset":67},"indent":[]},"value":"root"}],"anchors":{"overview":{"type":"header","text":"Overview","value":"overview","line":8,"column":0,"depth":1},"main-goals":{"type":"header","text":"Main goals","value":"main-goals","line":12,"column":0,"depth":1},"an-open-science-project":{"type":"header","text":"An Open Science project","value":"an-open-science-project","line":18,"column":0,"depth":1},"working-with-the-workshop-doors-open":{"type":"header","text":"Working with the workshop doors open","value":"working-with-the-workshop-doors-open","line":21,"column":0,"depth":2},"open-notebook-science":{"type":"header","text":"Open Notebook Science","value":"open-notebook-science","line":28,"column":0,"depth":2},"whats-new-":{"type":"header","text":"What's new ?!","value":"whats-new-","line":43,"column":0,"depth":2}},"children":["il7c8piddciyg8dw5owj6ui","se2pzun6petcy32hf5j3wuw","bum7d9d6lnc0a863iqaogka","r23kzroton7bo017hsc6lmk","fmlpvd5ebpugd0idxhytk28","iq3hz5b7sskcu56bl8pgbwq","vphzpqwuu98x8sfgfrconej","hl55gsxxo1wlj1igs9mso7p","1sxxmo2bt2eans2xhdorb0q","8yees000uw0bxldzotr8uvw","9p6t4gle5zj5ilkd67j9rud","n9brxvyxekn9b8bv9d8xdik","7ic8gy5h3i6v906dzrig6hy","m0qwxiyv7i2hnkr3fk2m3by","o6r2k35gfsfur2gwgk56ra3","o2psjwj00vl4m8d7rgyfk9f","8u9qb1u3gp4e3osrb73xvor","f7cx4bd1mxjt63d0daza1xb","xoiil9w7pvz3ojhif2a8ppj","o8bu4pl5w2ag7o1h3401qgj","u9u4dax4f23kvq98mtw0ezj","eh30zgccb8kw1z36jlstijv","b17we89hoe3m5ulu9d1t8by","rnoodwuxipqxc8zdxt7kqdm","6c37mounk3i96bftncrvr29","p6xf974t6tqndzis0qjc9j6","165zhtrhauww30lf9dbp8fa","h2jxo1dbamqvqodtuopq9q1","1k6j3afbnh1kiyz95m1kyxz","dwyb49xky735sox320haxga","trzsyfzfrls2if6tjt9dy5u","nnhoqwog50xoiu1bzbn6cyj","q7siltgd71qf2xgppbysw35","tofizf0eb38rduuw6ffnzba","v3eyay0icafeftx6kbyemlm","h8trx40s491czjp1npypo68","eru1s83ybgl3raytc4dgeuz","lykjjec8x2kmqnxjz10nwm6","q8ucho0l7y37kqhprv8ku3k","fynboti1depbjpoz1whdnvt","il17okdfivbzsj1ij63uf8m"],"parent":null,"data":{},"body":"\n# Overview\n\nThe Digital Botanical Gardens Initiative (DBGI, www.dbgi.org) ambitions to explore innovative solutions for the collection, management and sharing of digital information acquired on living botanical collections. A particular focus will be placed on the large scale characterization of the chemodiversity of living plants collections through mass spectrometric approaches. The acquired data will be structured, organized and connected with relevant metadata through [semantic web](https://en.wikipedia.org/wiki/Semantic_Web) technology. The gathered knowledge will then inform ecosystem functioning research and orient [biodiversity conservation](https://en.wikipedia.org/wiki/Conservation_biology) projects. The DBGI initially aims to take advantage of the readily available living collections of Swiss botanical gardens to establish robust and scalable biodiversity digitisation workflows. The ultimate goal is to apply these approaches in the field and at the global scale in wildlife ecosystems. \n\n# Main goals\n\nThe DBGI main goals are briefly summarized below :\n\n![](/assets/images/2022-06-18-17-13-23.png){max-width: 400px, display: block, margin: 0 auto}\n\n# An Open Science project\n\n\n## Working with the workshop doors open\n\n![](/assets/images/2022-06-18-17-47-56.png){max-width: 400px}\n\nA way of working briefly described by Andy Matuschak here https://notes.andymatuschak.org/z21cgR9K3UcQ5a7yPsj2RUim3oM2TzdBByZu. \n\n\n## Open Notebook Science\n\nIf we apply this \"working with the workshop doors open\" idea to a scientific research endeavor we understand it as respecting the core concepts of Open Science. These is more precisely the principle of Open Notebook Science https://en.wikipedia.org/wiki/Open-notebook_science\n\nFor the projects of the DBGI we will follow such an Open Notebook Science approach in order to share early ideas and results but also the less shiny parts of the research projects. \n\nYou can follow the DBGI related Open Notebooks here [[open-notebook]].\n\nExpect to find strange ideas, badly formulated text and poorly written code. However if you have time and interest you should be able to participate at each step of the process. Hopefully this will lead to enhanced collaboration and participation. Maybe yes, maybe not. Let's make it a methodological experiment !\n\nEach pages of this website are written in markdown and hosted on Github. You can edit them by clicking on the \"Click here to edit this page on Github !\" link at the bottom of the page. See down there 👇\n\nIf you are willing to participate the the DBGI Dendron notes have a look at the [[welcome]] section to get you started !\n\n\n## What's new ?!\n\nThis web site might not necessarily seem to be change since the last time you came to visit.\n\nIf something moved recently you should be able to track this over there https://github.com/digital-botanical-gardens-initiative/dendron-dbgi/commits/main"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.84.0","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"hooks":{"onCreate":[{"id":"hello","pattern":"hello.*","type":"js"}]}},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"DBGI Dendron page","description":"Open Notebook Science in the DBGI"},"github":{"enableEditLink":true,"editLinkText":"Participate and click here to edit this page on Github !","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/digital-botanical-gardens-initiative/dendron-dbgi"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"enableHierarchyDisplay":true,"assetsPrefix":"/dendron-dbgi","siteUrl":"https://digital-botanical-gardens-initiative.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"ga":{"tracking":"G-EPEXM5GLLG"},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}