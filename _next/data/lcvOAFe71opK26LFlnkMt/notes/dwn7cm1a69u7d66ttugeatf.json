{"pageProps":{"note":{"id":"dwn7cm1a69u7d66ttugeatf","title":"Sparql","desc":"","updated":1719217444876,"created":1719215986106,"custom":{},"fname":"anticipated-lotus.sparql","type":"note","vault":{"fsPath":"vault"},"contentHash":"2bf4efa13df4b9e84386112c04261dc1","links":[],"anchors":{"anticipated-lotus":{"type":"header","text":"anticipated lotus","value":"anticipated-lotus","line":8,"column":0,"depth":3}},"children":[],"parent":"1sxxmo2bt2eans2xhdorb0q","data":{}},"body":"<h1 id=\"sparql\">Sparql<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sparql\"></a></h1>\n<h3 id=\"anticipated-lotus\">anticipated lotus<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#anticipated-lotus\"></a></h3>\n<p>I am currently trying to be able to have all species of Wikidata available for predictions. </p>\n<p>I neeed to use this endpoint to get my data quickly: <a href=\"https://qlever.cs.uni-freiburg.de/wikidata\">https://qlever.cs.uni-freiburg.de/wikidata</a></p>\n<p>The idea would be to have a dataframe with for each species, its taxonomy in the same way as in LOTUS. To do so, </p>\n<ol>\n<li>\n<p>tu as ?taxon ?parent, à partir de là tu peux reconstuire toute la taxo (en dehors de sparql, comme t'as dû prendre dans lotus-search?) </p>\n<pre class=\"language-python\"><code class=\"language-python\"> <span class=\"token keyword\">import</span> csv\n <span class=\"token keyword\">import</span> logging\n <span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> defaultdict<span class=\"token punctuation\">,</span> deque\n <span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n <span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n \n logging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>\n     level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">\"%(asctime)s - %(levelname)s - %(message)s\"</span>\n <span class=\"token punctuation\">)</span>\n <span class=\"token keyword\">def</span> <span class=\"token function\">convert_to_int_safe</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n     <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n         result <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n         <span class=\"token keyword\">return</span> result\n     <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n         logging<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>s<span class=\"token punctuation\">}</span></span><span class=\"token string\"> is not a valid integer.\"</span></span><span class=\"token punctuation\">)</span>\n         <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n \n \n <span class=\"token keyword\">def</span> <span class=\"token function\">generate_taxon_parents_with_distance</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">:</span> Path<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n     graph <span class=\"token operator\">=</span> defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n     distances <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n     <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">/</span> <span class=\"token string\">\"full_wikidata_taxonomy_edges.csv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n         reader <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n         headers <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">)</span>\n         taxon_index <span class=\"token operator\">=</span> headers<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">)</span>\n         parent_index <span class=\"token operator\">=</span> headers<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"parent\"</span><span class=\"token punctuation\">)</span>\n \n         <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> reader<span class=\"token punctuation\">:</span>\n             taxon_id <span class=\"token operator\">=</span> row<span class=\"token punctuation\">[</span>taxon_index<span class=\"token punctuation\">]</span>\n             parent_id <span class=\"token operator\">=</span> row<span class=\"token punctuation\">[</span>parent_index<span class=\"token punctuation\">]</span>\n \n             <span class=\"token keyword\">if</span> taxon_id <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">or</span> parent_id <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                 <span class=\"token keyword\">continue</span>\n             graph<span class=\"token punctuation\">[</span>taxon_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>parent_id<span class=\"token punctuation\">)</span>\n     <span class=\"token comment\"># Good ol' BFS</span>\n     <span class=\"token keyword\">for</span> node <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n         visited <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span>\n         queue <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n         <span class=\"token keyword\">while</span> queue<span class=\"token punctuation\">:</span>\n             current_node <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n             current_distance <span class=\"token operator\">=</span> visited<span class=\"token punctuation\">[</span>current_node<span class=\"token punctuation\">]</span>\n \n             <span class=\"token keyword\">for</span> neighbor <span class=\"token keyword\">in</span> graph<span class=\"token punctuation\">[</span>current_node<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                 <span class=\"token keyword\">if</span> neighbor <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> visited<span class=\"token punctuation\">:</span>\n                     queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>neighbor<span class=\"token punctuation\">)</span>\n                     visited<span class=\"token punctuation\">[</span>neighbor<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current_distance <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n                     distances<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> neighbor<span class=\"token punctuation\">,</span> current_distance <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n     <span class=\"token keyword\">return</span> distances\n</code></pre>\n<p> This is super fast and results in a 9'000'000 rows dataframe. We can then think of getting the child as index, the <code>taxon_rank</code> of each parent from this query: </p>\n<pre class=\"language-sparql\"><code class=\"language-sparql\"><span class=\"token keyword\">PREFIX</span> <span class=\"token function\"><span class=\"token prefix\">wdt<span class=\"token punctuation\">:</span></span></span> <span class=\"token url\"><span class=\"token punctuation\">&#x3C;</span>http://www.wikidata.org/prop/direct/<span class=\"token punctuation\">></span></span>\n\n<span class=\"token keyword\">PREFIX</span> <span class=\"token function\"><span class=\"token prefix\">rdfs<span class=\"token punctuation\">:</span></span></span> <span class=\"token url\"><span class=\"token punctuation\">&#x3C;</span>http://www.w3.org/2000/01/rdf-schema#<span class=\"token punctuation\">></span></span>\n<span class=\"token keyword\">PREFIX</span> <span class=\"token function\"><span class=\"token prefix\">wd<span class=\"token punctuation\">:</span></span></span> <span class=\"token url\"><span class=\"token punctuation\">&#x3C;</span>http://www.wikidata.org/entity/<span class=\"token punctuation\">></span></span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token variable\">?rank</span> <span class=\"token variable\">?rank_label</span><span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">?rank</span> <span class=\"token function\"><span class=\"token prefix\">wdt<span class=\"token punctuation\">:</span></span><span class=\"token local-name\">P31</span></span> <span class=\"token function\"><span class=\"token prefix\">wd<span class=\"token punctuation\">:</span></span><span class=\"token local-name\">Q427626</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\"><span class=\"token prefix\">rdfs<span class=\"token punctuation\">:</span></span><span class=\"token local-name\">label</span></span> <span class=\"token variable\">?rank_label</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">FILTER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">LANG</span><span class=\"token punctuation\">(</span><span class=\"token variable\">?rank_label</span><span class=\"token punctuation\">)</span> = <span class=\"token string\">\"en\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n<li>\n<p>tu as ?taxon ?rank que tu peux join sur ?taxon</p>\n</li>\n<li>\n<p>tu as ?rank ?rank_label que tu peux join sur le résultat d'avant sur ?rank</p>\n</li>\n</ol>","noteIndex":{"id":"txkHnVTI9AawnquiublXO","title":"The DBGI Dendron notes","desc":"","updated":1688889927268,"created":1645438795591,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"fbac06bb8ff15f08a14f40cc7c9e268e","links":[{"type":"wiki","from":{"fname":"root","id":"txkHnVTI9AawnquiublXO","vaultName":"vault"},"value":"open-notebook","position":{"start":{"line":28,"column":53,"offset":1976},"end":{"line":28,"column":70,"offset":1993},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"open-notebook"}},{"type":"wiki","from":{"fname":"root","id":"txkHnVTI9AawnquiublXO","vaultName":"vault"},"value":"welcome","position":{"start":{"line":34,"column":81,"offset":2595},"end":{"line":34,"column":92,"offset":2606},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"welcome"}},{"from":{"fname":"welcome","id":"tofizf0eb38rduuw6ffnzba","vaultName":"vault"},"type":"backlink","position":{"start":{"line":5,"column":27,"offset":59},"end":{"line":5,"column":35,"offset":67},"indent":[]},"value":"root"}],"anchors":{"overview":{"type":"header","text":"Overview","value":"overview","line":8,"column":0,"depth":1},"main-goals":{"type":"header","text":"Main goals","value":"main-goals","line":12,"column":0,"depth":1},"an-open-science-project":{"type":"header","text":"An Open Science project","value":"an-open-science-project","line":18,"column":0,"depth":1},"working-with-the-workshop-doors-open":{"type":"header","text":"Working with the workshop doors open","value":"working-with-the-workshop-doors-open","line":21,"column":0,"depth":2},"open-notebook-science":{"type":"header","text":"Open Notebook Science","value":"open-notebook-science","line":28,"column":0,"depth":2},"whats-new-":{"type":"header","text":"What's new ?!","value":"whats-new-","line":43,"column":0,"depth":2}},"children":["il7c8piddciyg8dw5owj6ui","se2pzun6petcy32hf5j3wuw","bum7d9d6lnc0a863iqaogka","r23kzroton7bo017hsc6lmk","fmlpvd5ebpugd0idxhytk28","iq3hz5b7sskcu56bl8pgbwq","vphzpqwuu98x8sfgfrconej","hl55gsxxo1wlj1igs9mso7p","1sxxmo2bt2eans2xhdorb0q","8yees000uw0bxldzotr8uvw","9p6t4gle5zj5ilkd67j9rud","n9brxvyxekn9b8bv9d8xdik","7ic8gy5h3i6v906dzrig6hy","m0qwxiyv7i2hnkr3fk2m3by","o6r2k35gfsfur2gwgk56ra3","o2psjwj00vl4m8d7rgyfk9f","8u9qb1u3gp4e3osrb73xvor","f7cx4bd1mxjt63d0daza1xb","xoiil9w7pvz3ojhif2a8ppj","o8bu4pl5w2ag7o1h3401qgj","u9u4dax4f23kvq98mtw0ezj","eh30zgccb8kw1z36jlstijv","b17we89hoe3m5ulu9d1t8by","rnoodwuxipqxc8zdxt7kqdm","6c37mounk3i96bftncrvr29","p6xf974t6tqndzis0qjc9j6","165zhtrhauww30lf9dbp8fa","h2jxo1dbamqvqodtuopq9q1","1k6j3afbnh1kiyz95m1kyxz","dwyb49xky735sox320haxga","trzsyfzfrls2if6tjt9dy5u","nnhoqwog50xoiu1bzbn6cyj","q7siltgd71qf2xgppbysw35","tofizf0eb38rduuw6ffnzba","v3eyay0icafeftx6kbyemlm","h8trx40s491czjp1npypo68","eru1s83ybgl3raytc4dgeuz","lykjjec8x2kmqnxjz10nwm6","q8ucho0l7y37kqhprv8ku3k","fynboti1depbjpoz1whdnvt","il17okdfivbzsj1ij63uf8m"],"parent":null,"data":{},"body":"\n# Overview\n\nThe Digital Botanical Gardens Initiative (DBGI, www.dbgi.org) ambitions to explore innovative solutions for the collection, management and sharing of digital information acquired on living botanical collections. A particular focus will be placed on the large scale characterization of the chemodiversity of living plants collections through mass spectrometric approaches. The acquired data will be structured, organized and connected with relevant metadata through [semantic web](https://en.wikipedia.org/wiki/Semantic_Web) technology. The gathered knowledge will then inform ecosystem functioning research and orient [biodiversity conservation](https://en.wikipedia.org/wiki/Conservation_biology) projects. The DBGI initially aims to take advantage of the readily available living collections of Swiss botanical gardens to establish robust and scalable biodiversity digitisation workflows. The ultimate goal is to apply these approaches in the field and at the global scale in wildlife ecosystems. \n\n# Main goals\n\nThe DBGI main goals are briefly summarized below :\n\n![](/assets/images/2022-06-18-17-13-23.png){max-width: 400px, display: block, margin: 0 auto}\n\n# An Open Science project\n\n\n## Working with the workshop doors open\n\n![](/assets/images/2022-06-18-17-47-56.png){max-width: 400px}\n\nA way of working briefly described by Andy Matuschak here https://notes.andymatuschak.org/z21cgR9K3UcQ5a7yPsj2RUim3oM2TzdBByZu. \n\n\n## Open Notebook Science\n\nIf we apply this \"working with the workshop doors open\" idea to a scientific research endeavor we understand it as respecting the core concepts of Open Science. These is more precisely the principle of Open Notebook Science https://en.wikipedia.org/wiki/Open-notebook_science\n\nFor the projects of the DBGI we will follow such an Open Notebook Science approach in order to share early ideas and results but also the less shiny parts of the research projects. \n\nYou can follow the DBGI related Open Notebooks here [[open-notebook]].\n\nExpect to find strange ideas, badly formulated text and poorly written code. However if you have time and interest you should be able to participate at each step of the process. Hopefully this will lead to enhanced collaboration and participation. Maybe yes, maybe not. Let's make it a methodological experiment !\n\nEach pages of this website are written in markdown and hosted on Github. You can edit them by clicking on the \"Click here to edit this page on Github !\" link at the bottom of the page. See down there 👇\n\nIf you are willing to participate the the DBGI Dendron notes have a look at the [[welcome]] section to get you started !\n\n\n## What's new ?!\n\nThis web site might not necessarily seem to be change since the last time you came to visit.\n\nIf something moved recently you should be able to track this over there https://github.com/digital-botanical-gardens-initiative/dendron-dbgi/commits/main"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.84.0","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"hooks":{"onCreate":[{"id":"hello","pattern":"hello.*","type":"js"}]}},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"DBGI Dendron page","description":"Open Notebook Science in the DBGI"},"github":{"enableEditLink":true,"editLinkText":"Participate and click here to edit this page on Github !","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/digital-botanical-gardens-initiative/dendron-dbgi"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"enableHierarchyDisplay":true,"assetsPrefix":"/dendron-dbgi","siteUrl":"https://digital-botanical-gardens-initiative.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"ga":{"tracking":"G-EPEXM5GLLG"},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}